{"version":3,"sources":["../node_modules/handlebars-helpers/lib/utils sync","../node_modules/ansi-colors sync","../node_modules/create-frame sync","shaderExecution/SwappingTextureBuffer.js","shaderExecution/utils.js","shaderExecution/ShaderExecutor.js","components/createCallbackRef.js","components/createFunctionRef.js","components/FpsViewer.js","components/Renderer.js","shaders/default.vert","shaders/copyTexture.frag","shaders/mnca.frag","shaders/index.js","components/configuration/NeighbourhoodEditor.js","components/configuration/NeighbourhoodsEditor.js","components/configuration/presets/localPresets.js","components/configuration/presets/utils.js","components/configuration/presets/index.js","components/configuration/presets/defaultPresets.js","components/sliderComponents/Handle.js","components/sliderComponents/SliderRail.js","components/sliderComponents/Tick.js","components/sliderComponents/Track.js","components/sliderComponents/RangeSlider.js","components/configuration/RuleEditor.js","components/configuration/RulesEditor.js","components/configuration/ConfigurationEditor.js","components/configuration/RingEditor.js","components/configuration/RingsEditor.js","components/configuration/NeigbhourhoodVisualisation.js","components/settings/SettingsEditor.js","components/ControlPanel.js","components/Editorial.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","SwappingTextureBuffer","gl","width","undefined","height","this","Math","trunc","canvas","firstFrameBufferInfo","createFramebufferInfo","secondFrameBufferInfo","texture","attachments","frameBuffer","framebuffer","texture2","frameBuffer2","twgl","format","RGBA","bufferInfo","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","bindFramebuffer","FRAMEBUFFER","viewport","TRIANGLES","swap","pointsFromIndexes","points","indexes","map","index","flat","ShaderExecutor","canvasEl","mainSources","texturesSources","staticUniforms","getFrameUniforms","targetFps","codeErrorCallback","onRender","renderBody","time","uniforms","iFrame","frameCount","iTime","iDate","getIDate","Object","assign","textureProgramInfos","textureProgramInfo","useProgram","program","textureBuffer","renderTexture","mainProgramInfo","bindTexturesToMainProgram","renderMainProgram","getPixelsBuffer","read","readPixels","drawingBufferWidth","drawingBufferHeight","UNSIGNED_BYTE","pixelsBuffer","endTime","Date","duration","previousRenderTime","rendering","startRendering","requestRender","requestAnimationFrame","getContext","position","createProgramInfo","vsSource","fsSource","createTextureProgramInfo","Uint8Array","iResolution","renderTimeout","renderIntervalDuration","programInfo","getCodeErrorMessageCallback","createBuffer","textureIndex","textureSite","textureVariableName","mainProgramTextureLocation","getUniformLocation","console","log","message","lineNumber","uniform1i","now","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","renderingOrTimeout","stopRendering","setTimeout","reset","clearTimeout","oldProgram","deleteProgram","createCallbackRef","onSet","onUnset","onChange","onUpdate","ref","el","current","previousEl","wasSet","willSet","createFunctionRef","call","callIfSet","apply","arguments","FpsViewer","state","durations","fpsSelector","createSelector","length","reduce","tot","cur","setState","slice","props","onRenderRef","prevProps","fps","Component","Renderer","shaderError","detailedShaderError","hasExecutor","running","shaderExecutor","fpsOnRenderRef","onCanvasElSet","addShaderExecutor","errorsText","splits","split","onCanvasElUnset","removeShaderExecutor","canvasRef","onToggleRunningClick","started","restartRef","error","restart","entries","textureSources","updateTextureSourceCode","style","border","display","justifyContent","top","right","overflowY","errorLine","disabled","onClick","createFileLoader","streamOrPath","getContents","a","contents","startsWith","stream","fromOctetStream","path","fetch","response","text","atob","helpers","comparison","getVertexShaderCode","vertexShaderCodeRaw","getCopyTextureCode","copyTextureCodeRaw","getMncaCodeTemplate","mncaCodeTemplate","mncaCodeArgumentsSelector","_","neighbourhoods","max","neighbourhood","rings","ring","maxRadius","u_neighbourhoodRings","rules","_1","_2","presetData","type","neighbourhoodType","maxRingRadius","neighbourhoodRingCount","ruleCount","neighbourhoodCount","getMncaCodeSelector","getGetMncaCode","mncaCodeSelector","Handlebars","compile","configuration","settings","NeighbourhoodEditor","onRingsChange","updateNeighbourhood","onSliderChange","minRadius","onMoveUpClick","updateNeighbourhoods","onMoveDownClick","onAddAfterClick","onDeleteClick","referencedNeighbourIndexes","includes","title","neighbourhoodIndex","newNeighbourhoods","newPartialNeighbourhood","newNeighbourhood","NeighbourhoodsEditor","rulesSelector","referencedNeighbourIndexesSelector","neighbourIndexes","rule","Array","from","Set","sort","LOCAL_STORAGE_KEY","localPresets","parsedLocalPresets","localPresetsJson","localStorage","getItem","JSON","parse","forEach","addLocalPresetGetConfiguration","getLocalPresets","saveLocalPresets","presets","localPresetsWithoutFunction","filter","preset","isEditable","saveablePreset","getConfiguration","setItem","stringify","createLocalPresetCopy","presetsByName","original","name","random","toString","substring","generateUniquePresetName","label","originalLabel","generateNewPresetLabel","labels","values","has","counter","copyLabel","generateUniquePresetLabel","configurationJson","getPresetsByName","fromEntries","initialPresets","min","result","Handle","domain","handle","value","percent","getHandleProps","left","transform","WebkitTapHighlightColor","zIndex","cursor","backgroundColor","role","borderRadius","boxShadow","defaultProps","railOuterStyle","railInnerStyle","pointerEvents","SliderRail","getRailProps","Tick","tick","count","marginTop","fontSize","textAlign","marginLeft","Track","source","target","getTrackProps","d","sliderStyle","RangeSlider","defaultValues","mode","step","rootStyle","handles","className","tracks","ticks","ruleDomain","RuleEditor","onDeadChange","updateRule","onAliveChange","onDecreaseChange","onIncreaseChange","onNeighbourhoodChange","parseInt","updateRules","onMinChange","onMinKeyUp","keyCode","onMinBlur","onMaxChange","onMaxKeyUp","onMaxBlur","onRuleSliderChange","checked","size","onKeyUp","onBlur","newRules","newPartialRule","newRule","RulesEditor","ConfigurationEditor","onRulesChange","updateConfiguration","onNeighbourhoodsChange","newPartialConfiguration","defaultPreset","getConfigurationFromUrlFragment","getDefaultConfiguration","window","location","hash","jsonConfiguration","ringDomain","RingEditor","updateRings","updateRing","ringCount","isRangeInteger","color","newRings","newPartialRing","newRing","RingsEditor","NeigbhourhoodVisualisation","maxRadiusSelector","radiuses","gridSelector","range","grid","x","y","cell","isCenter","distance","floor","sqrt","abs","isActive","cellSize","stroke","fill","SettingsEditor","urlFragmentSelector","btoa","onReset","initialConfiguration","onKeepRessedingChange","updateSettings","keepReseeding","onPresetChange","setPreset","onSaveACopyClick","onPresetsChange","newPreset","prompt","onUpdatePresetClick","findIndex","updateInitialConfiguration","onRenamePresetClick","onDeletePresetClick","onMonochromeChange","monochrome","onRestart","href","urlFragment","newPartialSettings","newInitialConfiguration","onInitialConfigurationChange","newConfiguration","onConfigurationChange","ControlPanel","presetsByNameSelector","callback","margin","onSetingsChange","getDefaultSettings","getInitialConfiguration","Editorial","getMainSources","vertexShaderCode","copyTextureCode","App","getInitialSettingsAndConfiguration","percentagesActive","red","green","blue","updateMainSources","onSettingsChange","updateTextureSources","neighbourhoodsSelector","neibhourhoodRingsUniformSelector","maxRingRadiusSelector","typeSelector","rulesUniformSelector","keepReseedingSelector","monochromeSelector","frameUniformsSelector","neibhourhoodRingssUniform","rulesUniform","u_rules","u_keepReseeding","u_monochrome","u_maxRingRadius","frameUniforms","i","getMncaCode","texturesSourcesSelector","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.2d94b56d.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 112;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 148;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 408;","import * as twgl from \"twgl.js\";\n\nexport default class SwappingTextureBuffer{\n  constructor(gl, {width = undefined, height = undefined} = {}) {\n    this.gl = gl;\n    this.width = width || Math.trunc(this.gl.canvas.width);\n    this.height = height || Math.trunc(this.gl.canvas.height);\n\n    const firstFrameBufferInfo = this.createFramebufferInfo();\n    const secondFrameBufferInfo = this.createFramebufferInfo();\n  \n    this.texture = firstFrameBufferInfo.attachments[0];\n    this.frameBuffer = firstFrameBufferInfo.framebuffer;\n    this.texture2 = secondFrameBufferInfo.attachments[0];\n    this.frameBuffer2 = secondFrameBufferInfo.framebuffer;\n  }\n\n  createFramebufferInfo() {\n    return twgl.createFramebufferInfo(this.gl, [\n      {format: this.gl.RGBA},\n    ], this.width, this.height);\n  }\n\n  swap() {\n    [this.texture, this.texture2] = [this.texture2, this.texture];\n    [this.frameBuffer, this.frameBuffer2] = [this.frameBuffer2, this.frameBuffer];\n  }\n\n  renderTexture(bufferInfo) {\n    this.gl.activeTexture(this.gl.TEXTURE0);\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);  \n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.frameBuffer2);  \n    this.gl.viewport(0, 0, this.width, this.height);\n    twgl.drawBufferInfo(this.gl, this.gl.TRIANGLES, bufferInfo);  \n    this.swap();\n  }\n}\n","export function pointsFromIndexes(points, indexes) {\n  return indexes\n    .map(index => points[index])\n    .flat();\n}\n","import * as twgl from \"twgl.js\";\nimport SwappingTextureBuffer from \"./SwappingTextureBuffer\";\nimport {pointsFromIndexes} from \"./utils\";\n\nexport default class ShaderExecutor {\n  constructor(canvasEl, {\n    mainSources, texturesSources = [], staticUniforms = {},\n    getFrameUniforms, targetFps = 60, codeErrorCallback, onRender,\n  } = {}) {\n    this.canvasEl = canvasEl;\n    if (!this.canvasEl) {\n      throw new Error(\"No canvas passed in\");\n    }\n    this.gl = canvasEl.getContext(\"webgl2\");\n    if (!this.gl) {\n      throw new Error(\"Could not get WebGL context\");\n    }\n  \n    this.bufferInfo = twgl.createBufferInfoFromArrays(this.gl, {\n      position: pointsFromIndexes([\n        [-1, -1, 0],\n        [1, -1, 0],\n        [1, 1, 0],\n        [-1, 1, 0],\n      ], [0, 1, 3, 3, 1, 2]),\n    });\n\n    this.mainProgramInfo = this.createProgramInfo(...mainSources, codeErrorCallback);\n    this.textureProgramInfos = texturesSources\n      .map(([vsSource, fsSource], index) => {\n        return this.createTextureProgramInfo(index, vsSource, fsSource, {codeErrorCallback});\n      });\n\n    this.pixelsBuffer = new Uint8Array(\n      this.gl.drawingBufferWidth * this.gl.drawingBufferHeight * 4);\n\n    this.staticUniforms = {\n      ...staticUniforms,\n        iResolution: [this.gl.canvas.width, this.gl.canvas.height],\n    };\n    this.getFrameUniforms = getFrameUniforms;\n    this.frameCount = 0;\n    this.rendering = false;\n    this.renderTimeout = null;\n    this.targetFps = targetFps;\n    this.renderIntervalDuration = 1000 / this.targetFps;\n    this.onRender = onRender;\n    this.previousRenderTime = null;\n  }\n\n  createProgramInfo(vsSource, fsSource, codeErrorCallback) {\n    const programInfo = twgl.createProgramInfo(\n      this.gl, \n      [vsSource, fsSource], \n      this.getCodeErrorMessageCallback(codeErrorCallback));\n    if (!programInfo) {\n      throw new Error(\"Could not compile sources\");\n    }\n    twgl.setBuffersAndAttributes(this.gl, programInfo, this.bufferInfo);\n    return programInfo;\n  }\n\n  createTextureProgramInfo(index, vsSource, fsSource, {createBuffer = true, codeErrorCallback} = {}) {\n    const programInfo = this.createProgramInfo(vsSource, fsSource, codeErrorCallback);\n    programInfo.vsSource = vsSource;\n    programInfo.fsSource = fsSource;\n    if (createBuffer) {\n      programInfo.textureBuffer = new SwappingTextureBuffer(this.gl);\n    }\n    programInfo.textureIndex = index;\n    programInfo.textureSite = this.gl.TEXTURE0 + index;\n    programInfo.textureVariableName = `u_texture${index}`;\n    programInfo.mainProgramTextureLocation = this.gl.getUniformLocation(\n      this.mainProgramInfo.program, programInfo.textureVariableName);\n    if (!programInfo.mainProgramTextureLocation) {\n      console.log(\n        `Could not get location for uniform named `\n        + `\"${programInfo.textureVariableName}\" in main program`);\n    }\n\n    return programInfo;\n  }\n\n  getCodeErrorMessageCallback(codeErrorCallback) {\n    return (message, lineNumber) => {\n      console.log(\"Shader compilation error\", message, lineNumber);\n      if (codeErrorCallback) {\n        codeErrorCallback(message, lineNumber);\n      }\n    };\n  }\n\n  renderBody = time => {\n    const uniforms = {\n      ...this.staticUniforms,\n      iFrame: this.frameCount,\n      iTime: time * 0.001,\n      iDate: this.getIDate(),\n    };\n    if (this.getFrameUniforms) {\n      Object.assign(uniforms, this.getFrameUniforms(uniforms));\n    }\n\n    for (const textureProgramInfo of this.textureProgramInfos) {\n      this.gl.useProgram(textureProgramInfo.program);\n      twgl.setUniforms(textureProgramInfo, uniforms);\n      textureProgramInfo.textureBuffer.renderTexture(this.bufferInfo);\n    }\n\n    this.gl.useProgram(this.mainProgramInfo.program);\n    twgl.setUniforms(this.mainProgramInfo, uniforms);\n    this.bindTexturesToMainProgram();\n    this.renderMainProgram();\n\n    const getPixelsBuffer = () => {\n      if (!getPixelsBuffer.read) {\n        this.gl.readPixels(\n          0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight, \n          this.gl.RGBA, this.gl.UNSIGNED_BYTE, this.pixelsBuffer);\n      }\n      return this.pixelsBuffer;\n    };\n    getPixelsBuffer.read = false;\n\n    const endTime = new Date();\n    let duration = null;\n    if (this.previousRenderTime) {\n      duration = endTime - this.previousRenderTime;\n    }\n    this.previousRenderTime = endTime;\n\n    if (this.onRender) {\n      this.onRender(duration, this, uniforms, getPixelsBuffer);\n    }\n\n    this.frameCount += 1;\n    \n    if (this.rendering) {\n      this.startRendering();\n    }\n  }\n\n  bindTexturesToMainProgram() {\n    for (const programInfo of this.textureProgramInfos) {\n      if (!this.textureProgramInfos.mainProgramTextureLocation) {\n        continue;\n      }\n      this.gl.uniform1i(\n        this.textureProgramInfos.mainProgramTextureLocation, \n        programInfo.textureIndex);\n      this.gl.activeTexture(programInfo.textureSite);\n      this.gl.bindTexture(\n        this.gl.TEXTURE_2D, programInfo.textureBuffer.texture);\n    }\n  }\n\n  renderMainProgram() {\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);  \n    this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n    twgl.drawBufferInfo(this.gl, this.gl.TRIANGLES, this.bufferInfo);\n  }\n\n  getIDate() {\n    const now = new Date();\n    return [\n      now.getUTCFullYear(), \n      now.getUTCMonth() + 1,\n      now.getUTCDate(),\n      (\n        ((now.getUTCHours() + 1) * 60) \n        + now.getUTCMinutes()\n      ) * 60 + now.getUTCSeconds(),\n    ];\n  }\n  \n  requestRender = () => {\n    requestAnimationFrame(this.renderBody);\n  };\n\n  restart() {\n    this.frameCount = 0;\n  }\n\n  startRendering() {\n    const renderingOrTimeout = !!(this.rendering || this.renderTimeout);\n    this.stopRendering(false);\n    this.rendering = true;\n    if (renderingOrTimeout) {\n      this.renderTimeout = setTimeout(this.requestRender, this.renderIntervalDuration);\n    } else {\n      this.requestRender();\n    }\n  }\n\n  stopRendering(reset = true) {\n    if (reset) {\n      this.previousRenderTime = null;\n    }\n    this.rendering = false;\n    if (!this.renderTimeout) {\n      return;\n    }\n\n    clearTimeout(this.renderTimeout);\n    this.renderTimeout = null;\n  }\n\n  setTargetFps(targetFps) {\n    this.targetFps = targetFps;\n    this.renderIntervalDuration = 1000 / this.targetFps;\n  }\n\n  updateTextureSourceCode(index, vsSource, fsSource) {\n    const programInfo = this.textureProgramInfos[index];\n    if (programInfo.vsSource === vsSource && programInfo.fsSource === fsSource) {\n      return;\n    }\n\n    const oldProgram = programInfo.program;\n\n    Object.assign(\n      programInfo, \n      this.createTextureProgramInfo(\n        index, vsSource, fsSource, {createBuffer: false}),\n    );\n\n    this.gl.deleteProgram(oldProgram);\n  }\n}\n","export function createCallbackRef(onSet, onUnset, onChange, onUpdate) {\n  const ref = el => {\n    if (el === ref.current) {\n      return;\n    }\n\n    const previousEl = ref.current;\n    const wasSet = ref.current !== null;\n    const willSet = el !== null;\n    if (wasSet && willSet) {\n      if (ref.onChange) {\n        ref.onChange(el, previousEl);\n      }\n      if (ref.onUpdate) {\n        ref.onUpdate(el, previousEl);\n      }\n      ref(null);\n      ref(el);\n      return;\n    }\n\n    ref.current = el;\n    if(!wasSet && willSet) {\n      if (ref.onSet) {\n        ref.onSet(el);\n      }\n      if (ref.onUpdate) {\n        ref.onUpdate(el, previousEl);\n      }\n    } else if (wasSet && !willSet) {\n      if (ref.onUnset) {\n        ref.onUnset(previousEl);\n      }\n      if (ref.onUpdate) {\n        ref.onUpdate(el, previousEl);\n      }\n    }\n  };\n\n  ref.current = null;\n  ref.onSet = onSet;\n  ref.onUnset = onUnset;\n  ref.onChange = onChange;\n  ref.onUpdate = onUpdate;\n\n  return ref;  \n};\n","export default function createFunctionRef() {\n  const ref = function(call) {\n    ref.call = call;\n  };\n  ref.call = null;\n  ref.callIfSet = function() {\n    if (!ref.call) {\n      return;\n    }\n    return ref.call.apply(this, arguments);\n  };\n  \n  return ref;\n}\n","import React, { Component } from \"react\";\nimport { createSelector } from \"reselect\";\n\nexport default class FpsViewer extends Component {\n  state = {\n    durations: [],\n  };\n\n  componentDidMount() {\n    if (this.props.onRenderRef) {\n      this.props.onRenderRef(this.onRender);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.onRenderRef && prevProps.onRenderRef !== this.props.onRenderRef) {\n      this.props.onRenderRef(this.onRender);\n    }\n  }\n  \n  render() {\n    const {fps} = this;\n\n    return (\n      <label>\n        FPS:{\" \"}\n        {fps === null ? \"N/A\" : ~~fps}\n      </label>\n    );\n  }\n\n  fpsSelector = createSelector(\n    ({durations}) => durations,\n    durations => {\n      if (!durations.length) {\n        return null;\n      }\n      const averageDurationS = durations.reduce((tot, cur) => tot + cur) / durations.length / 1000;\n      return 1 / averageDurationS;\n    },\n  );\n  get fps() {\n    return this.fpsSelector(this.state);\n  }\n\n  onRender = duration => {\n    if (duration === null) {\n      this.setState({durations: []});\n      return;\n    }\n    this.setState(({durations}) => ({\n      durations: [...(durations.length < 30 ? durations : durations.slice(durations.length - 30 + 1)), duration],\n    }));\n  };\n}\n","import React, {Component, Fragment} from \"react\";\n\nimport ShaderExecutor from \"../shaderExecution/ShaderExecutor\";\nimport { createCallbackRef } from \"./createCallbackRef\";\nimport createFunctionRef from \"./createFunctionRef\";\nimport FpsViewer from \"./FpsViewer\";\n\nexport default class Renderer extends Component {\n  state = {\n    shaderError: null,\n    detailedShaderError: null,\n    hasExecutor: false,\n    running: false,\n  };\n\n  shaderExecutor = null;\n  fpsOnRenderRef = createFunctionRef();\n\n  onCanvasElSet = () => {\n    this.addShaderExecutor();\n  };\n\n  removeShaderExecutor() {\n    if(!this.shaderExecutor) {\n      return;\n    }\n    this.shaderExecutor.stopRendering();\n    this.shaderExecutor = null;\n    if (this.props.restartRef) {\n      this.props.restartRef(null);\n    }\n    this.setState({hasExecutor: false, started: false});\n  }\n\n  addShaderExecutor() {\n    this.removeShaderExecutor();\n    this.setState({shaderError: null, detailedShaderError: null});\n    try {\n      this.shaderExecutor = new ShaderExecutor(this.canvasRef.current, {\n        mainSources: this.props.mainSources,\n        texturesSources: this.props.texturesSources,\n        getFrameUniforms: this.props.getFrameUniforms,\n        onRender: this.onRender,\n        codeErrorCallback: this.codeErrorCallback,\n      });\n    } catch (e) {\n      console.error(\"Could not create shader executor:\", e);\n      this.setState({shaderError: `Could not create shader executor: ${e}`});\n      return;\n    }\n    this.shaderExecutor.startRendering();\n    if (this.props.restartRef) {\n      this.props.restartRef(() => this.shaderExecutor.restart());\n    }\n    this.setState({hasExecutor: true, started: true});\n  }\n\n  codeErrorCallback = (message, lineNumber) => {\n    let errorsText;\n    const splits = message.split(\"*** Error compiling shader: \");\n    if (splits.length >= 2) {\n      errorsText = splits[1];\n    } else {\n      errorsText = message;\n    }\n    this.setState(({detailedShaderError}) => ({\n      detailedShaderError: detailedShaderError \n        ? `${detailedShaderError}\\n${errorsText}` : errorsText,\n    }));\n  };\n\n  onCanvasElUnset = () => {\n    this.removeShaderExecutor();\n  };\n\n  canvasRef = createCallbackRef(\n    this.onCanvasElSet, this.onCanvasElUnset);\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.getFrameUniforms !== this.props.getFrameUniforms) {\n      this.shaderExecutor.getFrameUniforms = this.props.getFrameUniforms;\n    }\n    if (prevProps.texturesSources !== this.props.texturesSources) {\n      if (this.shaderExecutor) {\n        if (this.props.texturesSources.length === this.shaderExecutor.textureProgramInfos.length) {\n          for (const [index, textureSources] of this.props.texturesSources.entries()) {\n            this.shaderExecutor.updateTextureSourceCode(index, ...textureSources);\n          }\n        } else {\n          this.addShaderExecutor();\n        }\n      }\n    }\n  }\n\n  render () {\n    const {shaderError, detailedShaderError, hasExecutor, started} = this.state;\n    const {width = 720, height = 405} = this.props;\n    const style = {\n      width, \n      height, \n      border: \"1px solid black\", \n      display: \"flex\",\n      justifyContent: \"center\",\n      position: \"absolute\",\n      top: 0,\n      right: 0,\n      overflowY: \"auto\",\n    };\n    return (\n      <div style={{position: \"relative\"}}>\n        <canvas width={width} height={height} ref={this.canvasRef} />\n        {shaderError || detailedShaderError ? (\n          <div style={style}>\n            <div>\n              {shaderError}\n              {detailedShaderError ? (\n                detailedShaderError.split(\"\\n\").map((errorLine, index) => (\n                  <Fragment key={index}>\n                    <br/>\n                    {errorLine}\n                  </Fragment>\n                ))\n              ) : null}\n            </div>\n          </div>\n        ) : null}\n        <div>\n          <button\n            disabled={!hasExecutor}\n            onClick={this.onToggleRunningClick}\n          >\n            {started ? \"Pause\" : \"Continue\"}\n          </button>\n          <FpsViewer onRenderRef={this.fpsOnRenderRef} />\n        </div>\n      </div>\n    );\n  }\n\n  onRender = (duration, shaderExecutor, uniforms, pixelsBuffer) => {\n    this.fpsOnRenderRef.callIfSet(duration, shaderExecutor, uniforms, pixelsBuffer);\n    if (this.props.onRender) {\n      this.props.onRender(duration, shaderExecutor, uniforms, pixelsBuffer);\n    }\n  };\n\n  onToggleRunningClick = () => {\n    this.setState(({hasExecutor, started}) => {\n      if (hasExecutor) {\n        if (started) {\n          this.shaderExecutor.stopRendering();\n        } else {\n          this.shaderExecutor.startRendering();\n        }\n      }\n      return {\n        started: !started,\n      };\n    });\n  };\n}\n","export default __webpack_public_path__ + \"static/media/default.ac1cc8ab.vert\";","export default __webpack_public_path__ + \"static/media/copyTexture.446d9bff.frag\";","export default __webpack_public_path__ + \"static/media/mnca.36d3050f.frag\";","import Handlebars from \"handlebars\";\nimport helpers from \"handlebars-helpers\";\nimport {createSelector} from \"reselect\";\n\nimport vertexShaderCodeRaw from \"./default.vert\";\nimport copyTextureCodeRaw from \"./copyTexture.frag\";\nimport mncaCodeTemplate from \"./mnca.frag\";\n\nhelpers.comparison();\n\nfunction createFileLoader(streamOrPath) {\n  async function getContents() {\n    if (getContents.contents === null) {\n      if (streamOrPath.startsWith(\"data:\")) {\n        const stream = streamOrPath;\n        getContents.contents = fromOctetStream(stream);\n      } else {\n        const path = streamOrPath;\n        const response = await fetch(path);\n        getContents.contents = await response.text();\n      }\n    }\n    return getContents.contents;\n  }\n  getContents.contents = null;\n\n  return getContents;\n}\n\nfunction fromOctetStream(text) {\n  return atob(text.split(\",\", 2)[1]);\n}\n\nexport const getVertexShaderCode = createFileLoader(vertexShaderCodeRaw);\nexport const getCopyTextureCode = createFileLoader(copyTextureCodeRaw);\nconst getMncaCodeTemplate = createFileLoader(mncaCodeTemplate);\nconst mncaCodeArgumentsSelector = createSelector(\n  createSelector(\n    (_, {neighbourhoods}) => neighbourhoods,\n    neighbourhoods => {\n      return Math.max(...neighbourhoods.map(\n        neighbourhood => Math.max(...neighbourhood.rings.map(\n          ring => ring.maxRadius))));\n    },\n  ),\n  ({u_neighbourhoodRings}) => u_neighbourhoodRings.length,\n  (_, {rules}) => rules.length,\n  (_, {neighbourhoods}) => neighbourhoods.length,\n  (_1, _2, {presetData: {type}}) => type,\n  (_1, _2, {presetData: {neighbourhoodType}}) => neighbourhoodType,\n  (maxRingRadius, neighbourhoodRingCount, ruleCount, neighbourhoodCount, type, neighbourhoodType) => {\n    return {\n      maxRingRadius,\n      neighbourhoodCount,\n      neighbourhoodRingCount: neighbourhoodRingCount,\n      ruleCount,\n      type,\n      neighbourhoodType,\n    };\n  },\n);\nlet getMncaCodeSelector = null;\nexport async function getGetMncaCode() {\n  if (getMncaCodeSelector === null) {\n    const mncaCodeTemplate = await getMncaCodeTemplate();\n    const mncaCodeSelector = createSelector(\n      mncaCodeArgumentsSelector,\n      Handlebars.compile(mncaCodeTemplate),\n    );\n    getMncaCodeSelector = function getMncaCodeSelector(uniforms, configuration, settings) {\n      return mncaCodeSelector(uniforms, configuration, settings);\n    }\n  }\n\n  return getMncaCodeSelector;\n}\n\n","import React, { Component, Fragment } from \"react\";\nimport { NeigbhourhoodVisualisation, RingsEditor } from \".\";\n\nexport default class NeighbourhoodEditor extends Component {\n  render() {\n    const {\n      neighbourhoodType,\n      index, neighbourhood, neighbourhoods, \n      referencedNeighbourIndexes,\n    } = this.props;\n    const neighbourhoodCount = neighbourhoods.length;\n\n    return (\n      <Fragment>\n        Neighbourhood {index + 1}#\n        <button \n          disabled={index === 0} \n          onClick={this.onMoveUpClick}\n        >\n          Move Up\n        </button>\n        <button \n          disabled={index === neighbourhoodCount - 1} \n          onClick={this.onMoveDownClick}\n        >\n          Move Down\n        </button>\n        <button \n          onClick={this.onAddAfterClick}\n        >\n          Add neighbourhood after\n        </button>\n        <button \n          disabled={\n            neighbourhoodCount === 1 \n            || referencedNeighbourIndexes.includes(index)\n          }\n          title={\n            neighbourhoodCount === 1 \n              ? \"Cannot delete only neighbourhood\" \n              : referencedNeighbourIndexes.includes(index) \n                ? \"Cannot delete neighbour referenced by rules\" \n                : undefined\n          }\n          onClick={this.onDeleteClick}\n        >\n          Delete neighbourhood\n        </button>\n        <br/>\n        <NeigbhourhoodVisualisation\n          neighbourhoodType={neighbourhoodType}\n          neighbourhood={neighbourhood}\n        />\n        <RingsEditor \n          neighbourhoodIndex={index}\n          rings={neighbourhood.rings}\n          onChange={this.onRingsChange}\n        />\n      </Fragment>\n    );\n  }\n\n  updateNeighbourhoods(newNeighbourhoods) {\n    if (!this.props.onChange) {\n      return;\n    }\n    this.props.onChange(newNeighbourhoods);\n  }\n\n  updateNeighbourhood(newPartialNeighbourhood) {\n    if (!this.props.onChange) {\n      return;\n    }\n    const {index, neighbourhood, neighbourhoods} = this.props;\n    const newNeighbourhood = {...neighbourhood, ...newPartialNeighbourhood};\n    this.updateNeighbourhoods([\n      ...neighbourhoods.slice(0, index),\n      newNeighbourhood,\n      ...neighbourhoods.slice(index + 1),\n    ]);\n  }\n  \n  onRingsChange = rings => {\n    this.updateNeighbourhood({rings});\n  }\n\n  onSliderChange = ([minRadius, maxRadius]) => {\n    this.updateNeighbourhood({minRadius, maxRadius});\n  }\n\n  onMoveUpClick = () => {\n    const {index, neighbourhood, neighbourhoods} = this.props;\n    this.updateNeighbourhoods([\n      ...neighbourhoods.slice(0, index - 1),\n      neighbourhood,\n      neighbourhoods[index - 1],\n      ...neighbourhoods.slice(index + 1),\n    ]);\n  }\n\n  onMoveDownClick = () => {\n    const {index, neighbourhood, neighbourhoods} = this.props;\n    this.updateNeighbourhoods([\n      ...neighbourhoods.slice(0, index),\n      neighbourhoods[index + 1],\n      neighbourhood,\n      ...neighbourhoods.slice(index + 2),\n    ]);\n  }\n\n  onAddAfterClick = () => {\n    const {index, neighbourhoods} = this.props;\n    this.updateNeighbourhoods([\n      ...neighbourhoods.slice(0, index + 1),\n      {minRadius: 2, maxRadius: 4},\n      ...neighbourhoods.slice(index + 1),\n    ]);\n  }\n\n  onDeleteClick = () => {\n    const {index, neighbourhoods} = this.props;\n    this.updateNeighbourhoods([\n      ...neighbourhoods.slice(0, index),\n      ...neighbourhoods.slice(index + 1),\n    ]);\n  }\n}\n","import React, { Component } from \"react\";\nimport { createSelector } from \"reselect\";\n\nimport NeighbourhoodEditor from \"./NeighbourhoodEditor\";\n\nexport default class NeighbourhoodsEditor extends Component {\n  rulesSelector = ({rules}) => rules;\n  referencedNeighbourIndexesSelector = createSelector(\n    this.rulesSelector,\n    rules => {\n      const neighbourIndexes = rules\n        .map(rule => rule.neighbourhoodIndex);\n      return Array.from(new Set(neighbourIndexes)).sort();\n    },\n  );\n\n  get referencedNeighbourIndexes() {\n    return this.referencedNeighbourIndexesSelector(this.props);\n  }\n\n  render() {\n    const {neighbourhoodType, neighbourhoods, onChange} = this.props;\n\n    return neighbourhoods.map((neighbourhood, index) => (\n      <NeighbourhoodEditor \n        key={index} \n        neighbourhoodType={neighbourhoodType}\n        index={index} \n        neighbourhood={neighbourhood} \n        neighbourhoods={neighbourhoods} \n        referencedNeighbourIndexes={this.referencedNeighbourIndexes}\n        onChange={onChange} \n      />\n    ));\n  }\n}\n","const LOCAL_STORAGE_KEY = \"editablMncaPresets\";\n\nfunction getLocalPresets() {\n  let parsedLocalPresets;\n  try {\n    const localPresetsJson = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (!localPresetsJson) {\n      return [];\n    }\n    parsedLocalPresets = JSON.parse(localPresetsJson);\n    if (!parsedLocalPresets) {\n      return [];\n    }\n  } catch (e) {\n    return [];\n  }\n\n  parsedLocalPresets.forEach(addLocalPresetGetConfiguration);\n\n  return parsedLocalPresets;\n}\n\nconst localPresets = getLocalPresets();\n\nfunction saveLocalPresets(presets) {\n  const localPresetsWithoutFunction = presets\n    .filter(preset => preset.isEditable)\n    .map(preset => {\n      const saveablePreset = {...preset};\n      delete saveablePreset.getConfiguration;\n      return saveablePreset;\n    });\n  try {\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY, \n      JSON.stringify(localPresetsWithoutFunction),\n    );\n  } catch (e) {\n    console.error(\"Could not save local presets\", e);\n  }\n}\n\nfunction createLocalPresetCopy(presetsByName, original) {\n  function generateUniquePresetLabel(originalLabel) {\n    let label = generateNewPresetLabel(originalLabel);\n    const labels = new Set(Object.values(presetsByName).map(preset => preset.label));\n    if (!labels.has(label)) {\n      return label;\n    }\n    for (let counter = 1 ; ; counter++) {\n      const copyLabel = `${label} (${counter})`;\n      if (!labels.has(copyLabel)) {\n        label = copyLabel;\n        break;\n      }\n    }\n\n    return label;\n  }\n\n  function generateNewPresetLabel(originalLabel) {\n    return `Copy of ${originalLabel}`;\n  }\n\n  function generateUniquePresetName() {\n    let name;\n    do {\n      name = generateRandomPresetName();\n    } while (name in presetsByName)\n\n    return name;\n  }\n\n  function generateRandomPresetName() {\n    return (Math.random() + 1).toString(36).substring(2);\n  }\n\n  const preset = {\n    name: generateUniquePresetName(),\n    label: generateUniquePresetLabel(original.label),\n    isEditable: true,\n    type: original.type,\n    neighbourhoodType: original.neighbourhoodType,\n    configuration: original.getConfiguration(),\n  };\n  addLocalPresetGetConfiguration(preset);\n\n  return preset;\n}\n\nfunction addLocalPresetGetConfiguration(preset) {\n  const configurationJson = JSON.stringify(preset.configuration);\n  preset.getConfiguration = () => {\n    return JSON.parse(configurationJson);\n  };\n}\n\nexport {\n  localPresets, createLocalPresetCopy,\n  addLocalPresetGetConfiguration, saveLocalPresets,\n};\n","function getPresetsByName(presets) {\n  return Object.fromEntries(presets.map(\n    preset => [preset.name, preset]));\n}\n\n\nexport {\n  getPresetsByName,\n};\n\n","import {defaultPresets} from \"./defaultPresets\";\nimport {\n  localPresets, createLocalPresetCopy,\n  addLocalPresetGetConfiguration, saveLocalPresets,\n} from \"./localPresets\";\nimport {getPresetsByName} from \"./utils\";\n\nconst initialPresets = [\n  ...defaultPresets,\n  ...localPresets,\n];\n\nexport {\n  initialPresets, getPresetsByName, createLocalPresetCopy,\n  addLocalPresetGetConfiguration, saveLocalPresets,\n};\n","export const defaultPresets = [\n  {\n    name: \"original\",\n    label: \"Original blobs configuration\",\n    isEditable: false,\n    type: \"discrete\",\n    neighbourhoodType: \"round\",\n    getConfiguration: () => ({\n      neighbourhoods: [\n        {\n          rings: [\n            {minRadius: 0, maxRadius: 3},\n          ],\n        },\n        {\n          rings: [\n            {minRadius: 4, maxRadius: 7},\n          ],\n        },\n      ],\n      rules: [\n        {min: 12, max: 15, result: false, neighbourhoodIndex: 1},\n        {min: 43, max: 55, result: true, neighbourhoodIndex: 0},\n        {min: 10, max: 28, result: false, neighbourhoodIndex: 0},\n        {min: 75, max: 85, result: false, neighbourhoodIndex: 1},\n        {min: 35, max: 50, result: false, neighbourhoodIndex: 1},\n        {min: 21, max: 22, result: true, neighbourhoodIndex: 1},\n      ],\n    }),\n  },\n  {\n    name: \"sustainable\",\n    label: \"Sustainable blobs\",\n    isEditable: false,\n    type: \"discrete\",\n    neighbourhoodType: \"round\",\n    getConfiguration: () => ({\n      neighbourhoods: [\n        {\n          rings: [\n            {minRadius: 0, maxRadius: 3},\n          ],\n        },\n        {\n          rings: [\n            {minRadius: 4, maxRadius: 7},\n          ],\n        },\n      ],\n      rules: [\n        {min: 6, max: 14, result: false, neighbourhoodIndex: 1},\n        {min: 43, max: 55, result: true, neighbourhoodIndex: 0},\n        {min: 10, max: 28, result: false, neighbourhoodIndex: 0},\n        {min: 75, max: 85, result: false, neighbourhoodIndex: 1},\n        {min: 35, max: 50, result: false, neighbourhoodIndex: 1},\n        {min: 21, max: 22, result: true, neighbourhoodIndex: 1},\n      ],\n    }),\n  },\n  {\n    name: \"worms\",\n    label: \"Original worms configuration\",\n    isEditable: false,\n    type: \"discrete\",\n    neighbourhoodType: \"round\",\n    getConfiguration: () => ({\n      neighbourhoods: [\n        {\n          rings: [\n            {minRadius: 0, maxRadius: 3},\n          ],\n        },\n        {\n          rings: [\n            {minRadius: 4, maxRadius: 7},\n          ],\n        },\n      ],\n      rules: [\n        {min: 15, max: 18, result: false, neighbourhoodIndex: 1},\n        {min: 44.5, max: 68, result: true, neighbourhoodIndex: 0},\n        {min: 15, max: 28, result: false, neighbourhoodIndex: 0},\n        {min: 75, max: 85, result: false, neighbourhoodIndex: 1},\n        {min: 34.3, max: 58, result: false, neighbourhoodIndex: 1},\n        {min: 18.5, max: 20, result: true, neighbourhoodIndex: 1},\n      ],\n    }),\n  },\n  {\n    name: \"pickles\",\n    label: \"Original pickles configuration\",\n    isEditable: false,\n    type: \"discrete\",\n    neighbourhoodType: \"round\",\n    getConfiguration: () => ({\n      neighbourhoods: [\n        {\n          rings: [\n            {minRadius: 0, maxRadius: 14},\n          ],\n        },\n        {\n          rings: [\n            {minRadius: 0, maxRadius: 1},\n            {minRadius: 3, maxRadius: 5},\n            {minRadius: 7, maxRadius: 8},\n          ],\n        },\n        {\n          rings: [\n            {minRadius: 0, maxRadius: 11},\n          ],\n        },\n        {\n          rings: [\n            {minRadius: 1, maxRadius: 5},\n            {minRadius: 6, maxRadius: 8},\n            {minRadius: 9, maxRadius: 13},\n            {minRadius: 14, maxRadius: 16},\n          ],\n        },\n      ],\n      rules: [\n        // {min: 63.5899371948242, max: 25.7917227783203, result: true,  neighbourhoodIndex: 3},\n        // {min: 88.4922902221680, max: 76.0411137084961, result: false, neighbourhoodIndex: 3},\n        {min:  3.5574790039063, max: 13.3405462646484, result: false, neighbourhoodIndex: 3},\n        {min: 88.9369750976563, max: 97.8306726074219, result: true,  neighbourhoodIndex: 3},\n        \n        // {min: 67.1474161987305, max: 48.9153363037109, result: true,  neighbourhoodIndex: 2},\n        {min: 19.5661345214844, max: 21.7895588989258, result: false, neighbourhoodIndex: 2},\n        // {min: 75.5964288330078, max: 53.8068699340820, result: true,  neighbourhoodIndex: 2},\n        {min: 34.2407354125977, max: 38.2428992919922, result: true,  neighbourhoodIndex: 2},\n        \n        {min:  5.7809033813477, max: 11.1171218872070, result: false, neighbourhoodIndex: 1},\n        {min: 48.4706514282227, max: 67.1474161987305, result: true,  neighbourhoodIndex: 1},\n        // {min: 45.3578572998047, max:  5.7809033813477, result: true,  neighbourhoodIndex: 1},\n        {min: 34.2407354125977, max: 37.7982144165039, result: true,  neighbourhoodIndex: 1},\n        \n        // {min: 78.7092229614258, max: 44.9131724243164, result: false, neighbourhoodIndex: 0},\n        {min: 53.3621850585938, max: 91.1603994750977, result: false, neighbourhoodIndex: 0},\n        // {min: 87.6029204711914, max: 76.4857985839844, result: true,  neighbourhoodIndex: 0},\n        {min: 26.2364076538086, max: 90.2710297241211, result: false, neighbourhoodIndex: 0},\n      ],\n    }),\n  },\n  {\n    name: \"conway\",\n    label: \"Conway's Game of Life\",\n    isEditable: false,\n    type: \"discrete\",\n    neighbourhoodType: \"round\",\n    getConfiguration: () => ({\n      neighbourhoods: [\n        {\n          rings: [\n            {minRadius: 0, maxRadius: 1},\n          ],\n        },\n      ],\n      rules: [\n        {min: (0 / 9 - 0 / 18) * 100, max: (1 / 9 + 1 / 18) * 100, result: false, neighbourhoodIndex: 0},\n        {min: (3 / 9 - 1 / 18) * 100, max: (3 / 9 + 1 / 18) * 100, result: true, neighbourhoodIndex: 0},\n        {min: (4 / 9 - 1 / 18) * 100, max: (9 / 9 + 0 / 18) * 100, result: false, neighbourhoodIndex: 0},\n      ],\n    }),\n  },\n  {\n    name: \"conway-bugs\",\n    label: \"Conway's Bugs\",\n    isEditable: false,\n    type: \"discrete\",\n    neighbourhoodType: \"square\",\n    getConfiguration: () => ({\n      neighbourhoods: [\n        {\n          rings: [\n            {minRadius: 0, maxRadius: 5},\n          ],\n        },\n      ],\n      rules: [\n        {min: (58 / 121 - 1 / 242) * 100, max: (121 / 121 + 0 / 242) * 100, result: false, neighbourhoodIndex: 0},\n        {min: (34 / 121 - 1 / 242) * 100, max: (45 / 121 + 1 / 242) * 100, result: true, neighbourhoodIndex: 0},\n        {min: (0 / 121 - 0 / 242) * 100, max: (33 / 121 + 1 / 242) * 100, result: false, neighbourhoodIndex: 0},\n      ],\n    }),\n  },\n  {\n    name: \"teeth\",\n    label: \"Original flying teeth\",\n    isEditable: false,\n    type: \"continuous\",\n    neighbourhoodType: \"round\",\n    getConfiguration: () => ({\n      neighbourhoods: [\n        {\n          rings: [\n            {minRadius: 1, maxRadius: 15},\n          ],\n        },\n        {\n          rings: [\n            {minRadius: 0, maxRadius: 2},\n            {minRadius: 3, maxRadius: 4},\n            {minRadius: 9, maxRadius: 11},\n            {minRadius: 12, maxRadius: 16},\n          ],\n        },\n        {\n          rings: [\n            {minRadius: 4, maxRadius: 15},\n          ],\n        },\n        {\n          rings: [\n            {minRadius: 1, maxRadius: 2},\n            {minRadius: 3, maxRadius: 7},\n            {minRadius: 11, maxRadius: 12},\n          ],\n        },\n      ],\n      rules: [\n        {min: 2.8978473175048827, max: 8.049575881958008, result: 1, neighbourhoodIndex: 3},\n        // {min: 13.362295964050294, max: 10.62544016418457, result: -1, neighbourhoodIndex: 3},\n        // {min: 28.33450710449219, max: 0.9659491058349609, result: -1, neighbourhoodIndex: 3},\n        {min: 13.040312928771972, max: 41.05283699798584, result: 1, neighbourhoodIndex: 3},\n\n        // {min: 3.219830352783203, max: 0.16099151763916016, result: 1, neighbourhoodIndex: 2},\n        {min: 7.888584364318847, max: 33.486235668945313, result: -1, neighbourhoodIndex: 2},\n        // {min: 21.73385488128662, max: 12.557338375854493, result: -1, neighbourhoodIndex: 2},\n        {min: 4.024787940979004, max: 10.947423199462891, result: -1, neighbourhoodIndex: 2},\n\n        {min: 5.4737115997314456, max: 14.167253552246095, result: 1, neighbourhoodIndex: 1},\n        // {min: 28.97847317504883, max: 28.817481657409666, result: 1, neighbourhoodIndex: 1},\n        {min: 24.631702198791505, max: 26.241617375183107, result: -1, neighbourhoodIndex: 1},\n        // {min: 34.452184774780276, max: 2.2538812469482424, result: -1, neighbourhoodIndex: 1},\n\n        // {min: 16.904109352111818, max: 5.151728564453125, result: -1, neighbourhoodIndex: 0},\n        {min: 1.770906694030762, max: 39.764904856872557, result: -1, neighbourhoodIndex: 0},\n        // {min: 15.616177210998536, max: 0.48297455291748045, result: -1, neighbourhoodIndex: 0},\n        {min: 16.099151763916017, max: 21.25088032836914, result: 1, neighbourhoodIndex: 0},\n      ],\n    }),\n  },\n];\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Handle({\n  domain: [min, max],\n  handle: { id, value, percent },\n  disabled,\n  getHandleProps\n}) {\n  return (\n    <Fragment>\n      <div\n        style={{\n          left: `${percent}%`,\n          position: \"absolute\",\n          transform: \"translate(-50%, -50%)\",\n          WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n          zIndex: 5,\n          width: 28,\n          height: 42,\n          cursor: \"pointer\",\n          // border: '1px solid white',\n          backgroundColor: \"none\"\n        }}\n        {...getHandleProps(id)}\n      />\n      <div\n        role=\"slider\"\n        aria-valuemin={min}\n        aria-valuemax={max}\n        aria-valuenow={value}\n        style={{\n          left: `${percent}%`,\n          position: \"absolute\",\n          transform: \"translate(-50%, -50%)\",\n          zIndex: 2,\n          width: 24,\n          height: 24,\n          borderRadius: \"50%\",\n          boxShadow: \"1px 1px 1px 1px rgba(0, 0, 0, 0.3)\",\n          backgroundColor: disabled ? \"#666\" : \"#ffc400\"\n        }}\n      />\n    </Fragment>\n  );\n}\n\nHandle.propTypes = {\n  domain: PropTypes.array.isRequired,\n  handle: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  getHandleProps: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};\n\nHandle.defaultProps = {\n  disabled: false\n};\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst railOuterStyle = {\n  position: \"absolute\",\n  width: \"100%\",\n  height: 42,\n  transform: \"translate(0%, -50%)\",\n  borderRadius: 7,\n  cursor: \"pointer\"\n  // border: '1px solid white',\n};\n\nconst railInnerStyle = {\n  position: \"absolute\",\n  width: \"100%\",\n  height: 14,\n  transform: \"translate(0%, -50%)\",\n  borderRadius: 7,\n  pointerEvents: \"none\",\n  backgroundColor: \"rgb(155,155,155)\"\n};\n\nexport default function SliderRail({ getRailProps }) {\n  return (\n    <Fragment>\n      <div style={railOuterStyle} {...getRailProps()} />\n      <div style={railInnerStyle} />\n    </Fragment>\n  );\n}\n\nSliderRail.propTypes = {\n  getRailProps: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Tick({ tick, count, format }) {\n  return (\n    <div>\n      <div\n        style={{\n          position: \"absolute\",\n          marginTop: 14,\n          width: 1,\n          height: 5,\n          backgroundColor: \"rgb(200,200,200)\",\n          left: `${tick.percent}%`\n        }}\n      />\n      <div\n        style={{\n          position: \"absolute\",\n          marginTop: 22,\n          fontSize: 10,\n          textAlign: \"center\",\n          marginLeft: `${-(100 / count) / 2}%`,\n          width: `${100 / count}%`,\n          left: `${tick.percent}%`\n        }}\n      >\n        {format(tick.value)}\n      </div>\n    </div>\n  );\n}\n\nTick.propTypes = {\n  tick: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  count: PropTypes.number.isRequired,\n  format: PropTypes.func.isRequired\n};\n\nTick.defaultProps = {\n  format: d => d\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Track({ source, target, getTrackProps, disabled }) {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        transform: \"translate(0%, -50%)\",\n        height: 14,\n        zIndex: 1,\n        backgroundColor: disabled ? \"#999\" : \"#b28900\",\n        borderRadius: 7,\n        cursor: \"pointer\",\n        left: `${source.percent}%`,\n        width: `${target.percent - source.percent}%`\n      }}\n      {...getTrackProps()}\n    />\n  );\n}\n\nTrack.propTypes = {\n  source: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  target: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  getTrackProps: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};\n\nTrack.defaultProps = {\n  disabled: false\n};\n","import React, {Component} from \"react\";\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\nimport Handle from \"./Handle\";\nimport SliderRail from \"./SliderRail\";\nimport Tick from \"./Tick\";\nimport Track from \"./Track\";\n\nconst sliderStyle = {\n  position: \"relative\",\n  width: \"100%\",\n  marginTop: 25,\n  height: 50,\n};\n\nexport default class RangeSlider extends Component {\n  render() {\n    const {domain, defaultValues, onUpdate, onChange} = this.props;\n\n    return (\n      <Slider\n        mode={2}\n        step={1}\n        domain={domain}\n        rootStyle={sliderStyle}\n        onUpdate={onUpdate}\n        onChange={onChange}\n        values={defaultValues}\n      >\n        <Rail>\n          {({ getRailProps }) => <SliderRail getRailProps={getRailProps} />}\n        </Rail>\n        <Handles>\n          {({ handles, getHandleProps }) => (\n            <div className=\"slider-handles\">\n              {handles.map((handle) => (\n                <Handle\n                  key={handle.id}\n                  handle={handle}\n                  domain={domain}\n                  getHandleProps={getHandleProps}\n                />\n              ))}\n            </div>\n          )}\n        </Handles>\n        <Tracks left={false} right={false}>\n          {({ tracks, getTrackProps }) => (\n            <div className=\"slider-tracks\">\n              {tracks.map(({ id, source, target }) => (\n                <Track\n                  key={id}\n                  source={source}\n                  target={target}\n                  getTrackProps={getTrackProps}\n                />\n              ))}\n            </div>\n          )}\n        </Tracks>\n        <Ticks count={5}>\n          {({ ticks }) => (\n            <div className=\"slider-ticks\">\n              {ticks.map((tick) => (\n                <Tick key={tick.id} tick={tick} count={ticks.length} />\n              ))}\n            </div>\n          )}\n        </Ticks>\n      </Slider>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport {RangeSlider} from \"../sliderComponents\";\n\nconst ruleDomain = [0, 100];\n\nexport default class RuleEditor extends Component {\n  state = {\n    min: this.props.rule.min,\n    max: this.props.rule.max,\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.rule.min === state.min && props.rule.max === state.max) {\n      return null;\n    }\n    return {\n      min: props.rule.min,\n      max: props.rule.max,\n    };\n  }\n\n  render() {\n    const {type, index, rule, rules, neighbourhoods} = this.props;\n    const {min, max} = this.state;\n    const ruleCount = rules.length;\n\n    return (\n      <Fragment>\n        Rule {index + 1}#\n        <label>\n          Neighbourhood: \n          <select \n            value={rule.neighbourhoodIndex} \n            onChange={this.onNeighbourhoodChange}\n          >\n            {neighbourhoods.map((_, neighbourhoodIndex) => (\n              <option \n                key={neighbourhoodIndex}\n                value={neighbourhoodIndex}\n              >\n                Neighbourhood {neighbourhoodIndex + 1}\n              </option>\n            ))}\n          </select>\n        </label>\n        {type === \"discrete\" ? (\n          <Fragment>\n            <label>\n              Dead \n              <input \n                type=\"radio\"\n                checked={!rule.result}\n                name={`rule${index}result`}\n                onChange={this.onDeadChange}\n              />\n            </label>\n            <label>\n              Alive\n              <input \n                type=\"radio\"\n                checked={rule.result}\n                name={`rule${index}result`} \n                onChange={this.onAliveChange}\n              />\n            </label>\n          </Fragment>\n        ) : type === \"continuous\" ? (\n          <Fragment>\n            <label>\n              Decrease \n              <input \n                type=\"radio\"\n                checked={rule.result === -1}\n                name={`rule${index}result`}\n                onChange={this.onDecreaseChange}\n              />\n            </label>\n            <label>\n              Increase\n              <input \n                type=\"radio\"\n                checked={rule.result === 1}\n                name={`rule${index}result`} \n                onChange={this.onIncreaseChange}\n              />\n            </label>\n          </Fragment>\n        ) : null}\n        <button \n          disabled={index === 0} \n          onClick={this.onMoveUpClick}\n        >\n          Move Up\n        </button>\n        <button \n          disabled={index === ruleCount - 1} \n          onClick={this.onMoveDownClick}\n        >\n          Move Down\n        </button>\n        <button \n          onClick={this.onAddAfterClick}\n        >\n          Add rule after\n        </button>\n        <button \n          disabled={ruleCount === 1}\n          title={\n            ruleCount === 1 ? \"Cannot delete only rule\" : undefined\n          }\n          onClick={this.onDeleteClick}\n        >\n          Delete rule\n        </button>\n        <br/>\n        Min ({\">\"}): \n        <input \n          type={\"textbox\"} \n          size={5} \n          value={min} \n          onChange={this.onMinChange}\n          onKeyUp={this.onMinKeyUp} \n          onBlur={this.onMinBlur} \n        />\n        Max ({\"<=\"}): \n        <input \n          type={\"textbox\"} \n          size={5} \n          value={max} \n          onChange={this.onMaxChange}\n          onKeyUp={this.onMaxKeyUp} \n          onBlur={this.onMaxBlur} \n        />\n        <RangeSlider  \n          domain={ruleDomain} \n          defaultValues={[~~rule.min, ~~rule.max]}\n          onChange={this.onRuleSliderChange}\n        />\n      </Fragment>\n    );\n  }\n\n  updateRules(newRules) {\n    if (!this.props.onChange) {\n      return;\n    }\n    this.props.onChange(newRules);\n  }\n\n  updateRule(newPartialRule) {\n    if (!this.props.onChange) {\n      return;\n    }\n    const {index, rule, rules} = this.props;\n    const newRule = {...rule, ...newPartialRule};\n    this.updateRules([\n      ...rules.slice(0, index),\n      newRule,\n      ...rules.slice(index + 1),\n    ]);\n  }\n  \n  onDeadChange = () => {\n    this.updateRule({result: false});\n  };\n\n  onAliveChange = () => {\n    this.updateRule({result: true});\n  }\n\n  onDecreaseChange = () => {\n    this.updateRule({result: -1});\n  };\n\n  onIncreaseChange = () => {\n    this.updateRule({result: 1});\n  }\n\n  onNeighbourhoodChange = ({target: {value}}) => {\n    this.updateRule({neighbourhoodIndex: parseInt(value, 10)});\n  }\n\n  onMoveUpClick = () => {\n    const {index, rule, rules} = this.props;\n    this.updateRules([\n      ...rules.slice(0, index - 1),\n      rule,\n      rules[index - 1],\n      ...rules.slice(index + 1),\n    ]);\n  }\n\n  onMoveDownClick = () => {\n    const {index, rule, rules} = this.props;\n    this.updateRules([\n      ...rules.slice(0, index),\n      rules[index + 1],\n      rule,\n      ...rules.slice(index + 2),\n    ]);\n  }\n\n  onAddAfterClick = () => {\n    const {index, rules} = this.props;\n    this.updateRules([\n      ...rules.slice(0, index + 1),\n      {min: 20, max: 40, result: false, neighbourhoodIndex: 0},\n      ...rules.slice(index + 1),\n    ]);\n  }\n\n  onDeleteClick = () => {\n    const {index, rules} = this.props;\n    this.updateRules([\n      ...rules.slice(0, index),\n      ...rules.slice(index + 1),\n    ]);\n  }\n\n  onMinChange = ({target: {value}}) => {\n    this.setState({min: parseInt(value, 10)});\n  };\n\n  onMinKeyUp = e => {\n    if (e.keyCode !== 13) {\n      return;\n    }\n    this.onMinBlur(e);\n  };\n\n  onMinBlur = ({target: {value}}) => {\n    this.updateRule({min: parseInt(value, 10)});\n  };\n\n  onMaxChange = ({target: {value}}) => {\n    this.setState({max: parseInt(value, 10)});\n  };\n\n  onMaxKeyUp = e => {\n    if (e.keyCode !== 13) {\n      return;\n    }\n    this.onMaxBlur(e);\n  };\n\n  onMaxBlur = ({target: {value}}) => {\n    this.updateRule({max: parseInt(value, 10)});\n  };\n\n  onRuleSliderChange = ([min, max]) => {\n    this.updateRule({min, max});\n  }\n}\n","import React, { Component } from \"react\";\n\nimport RuleEditor from \"./RuleEditor\";\n\nexport default class RulesEditor extends Component {\n  render() {\n    const {type, rules, neighbourhoods, onChange} = this.props;\n\n    return rules.map((rule, index) => (\n      <RuleEditor \n        key={index} \n        type={type}\n        index={index} \n        rule={rule} \n        rules={rules} \n        neighbourhoods={neighbourhoods} \n        onChange={onChange} \n      />\n    ));\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport NeighbourhoodsEditor from \"./NeighbourhoodsEditor\";\nimport { getPresetsByName, initialPresets } from \"./presets\";\nimport RulesEditor from \"./RulesEditor\";\n\nexport default class ConfigurationEditor extends Component {\n  static getInitialConfiguration(defaultPreset) {\n    return (\n      this.getConfigurationFromUrlFragment() \n      || this.getDefaultConfiguration(defaultPreset)\n    );\n  }\n\n  static getDefaultConfiguration(defaultPreset = \"original\") {\n    const presetsByName = getPresetsByName(initialPresets);\n    return presetsByName[defaultPreset].getConfiguration();\n  }\n\n  static getConfigurationFromUrlFragment() {\n    if (!window.location.hash) {\n      return null;\n    }\n    let jsonConfiguration;\n    try {\n      jsonConfiguration = atob(window.location.hash.slice(1));\n    } catch (e) {\n      return null;\n    }\n    let configuration;\n    try {\n      configuration = JSON.parse(jsonConfiguration);\n    } catch (e) {\n      return null;\n    }\n    if (!configuration.neighbourhoods || !configuration.rules) {\n      return null;\n    }\n    return configuration;\n  }\n  \n  render() {\n    const {neighbourhoodType, type, configuration: {rules, neighbourhoods}} = this.props;\n\n    return (\n      <Fragment>\n        <RulesEditor \n          type={type}\n          rules={rules} \n          neighbourhoods={neighbourhoods} \n          onChange={this.onRulesChange} \n        />\n        <NeighbourhoodsEditor\n          neighbourhoodType={neighbourhoodType}\n          rules={rules} \n          neighbourhoods={neighbourhoods} \n          onChange={this.onNeighbourhoodsChange} \n        />\n      </Fragment>\n    );\n  }\n\n  updateConfiguration(newPartialConfiguration) {\n    if (!this.props.onChange) {\n      return;\n    }\n    this.props.onChange({\n      ...this.props.configuration,\n      ...newPartialConfiguration,\n    });\n  }\n\n  onRulesChange = rules => {\n    this.updateConfiguration({rules});\n  };\n\n  onNeighbourhoodsChange = neighbourhoods => {\n    this.updateConfiguration({neighbourhoods});\n  };\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport { RangeSlider } from \"../sliderComponents\";\n\nconst ringDomain = [0, 20];\n\nexport default class RingEditor extends Component {\n  render() {\n    const {neighbourhoodIndex, index, ring, rings} = this.props;\n    const ringCount = rings.length;\n    const isRangeInteger = (\n      ring.minRadius === ~~ring.minRadius\n      && ring.maxRadius === ~~ring.maxRadius\n    );\n\n    return (\n      <Fragment>\n        <br/>\n        Ring {neighbourhoodIndex + 1}.{index + 1}#\n        <button \n          disabled={index === 0} \n          onClick={this.onMoveUpClick}\n        >\n          Move Up\n        </button>\n        <button \n          disabled={index === ringCount - 1} \n          onClick={this.onMoveDownClick}\n        >\n          Move Down\n        </button>\n        <button \n          onClick={this.onAddAfterClick}\n        >\n          Add ring after\n        </button>\n        <button \n          disabled={ringCount === 1}\n          title={\n            ringCount === 1 ? \"Cannot delete only ring\" : undefined\n          }\n          onClick={this.onDeleteClick}\n        >\n          Delete ring\n        </button>\n        {!isRangeInteger ? (\n          <span style={{color: \"red\"}}>Range edges are not integers, so if you change them, you won't be able to reset them individually</span>\n        ) : null}\n        <RangeSlider\n          domain={ringDomain} \n          defaultValues={[~~ring.minRadius, ~~ring.maxRadius]}\n          onChange={this.onSliderChange}\n        />\n      </Fragment>\n    );\n  }\n\n  updateRings(newRings) {\n    if (!this.props.onChange) {\n      return;\n    }\n    this.props.onChange(newRings);\n  }\n\n  updateRing(newPartialRing) {\n    if (!this.props.onChange) {\n      return;\n    }\n    const {index, ring, rings} = this.props;\n    const newRing = {...ring, ...newPartialRing};\n    this.updateRings([\n      ...rings.slice(0, index),\n      newRing,\n      ...rings.slice(index + 1),\n    ]);\n  }\n  \n  onMoveUpClick = () => {\n    const {index, ring, rings} = this.props;\n    this.updateRings([\n      ...rings.slice(0, index - 1),\n      ring,\n      rings[index - 1],\n      ...rings.slice(index + 1),\n    ]);\n  }\n\n  onMoveDownClick = () => {\n    const {index, ring, rings} = this.props;\n    this.updateRings([\n      ...rings.slice(0, index),\n      rings[index + 1],\n      ring,\n      ...rings.slice(index + 2),\n    ]);\n  }\n\n  onAddAfterClick = () => {\n    const {index, rings} = this.props;\n    this.updateRings([\n      ...rings.slice(0, index + 1),\n      {minRadius: 2, maxRadius: 5},\n      ...rings.slice(index + 1),\n    ]);\n  }\n\n  onDeleteClick = () => {\n    const {index, rings} = this.props;\n    this.updateRings([\n      ...rings.slice(0, index),\n      ...rings.slice(index + 1),\n    ]);\n  }\n\n  onSliderChange = ([minRadius, maxRadius]) => {\n    this.updateRing({minRadius, maxRadius});\n  }\n}","import React, { Component } from \"react\";\n\nimport RingEditor from \"./RingEditor\";\n\nexport default class RingsEditor extends Component {\n  render() {\n    const {neighbourhoodIndex, rings, onChange} = this.props;\n\n    return (\n      rings.map((ring, index) => (\n        <RingEditor \n          key={index}\n          neighbourhoodIndex={neighbourhoodIndex}\n          index={index}\n          ring={ring}\n          rings={rings}\n          onChange={onChange}\n        />\n      ))\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { createSelector } from \"reselect\";\nimport _ from \"underscore\";\n\nexport default class NeigbhourhoodVisualisation extends Component {\n  render() {\n    const {size = 100} = this.props;\n    const maxRadius = this.maxRadius;\n    const grid = this.grid;\n    const cellSize = size / (maxRadius * 2 + 1);\n\n    return (\n      <svg width={size} height={size} style={{border: \"1px solid black\"}}>\n        {grid.map(({x, y, isCenter, isActive}) => (\n          <rect \n            key={`${x}-${y}`}\n            x={(x + maxRadius) * cellSize} \n            y={(y + maxRadius) * cellSize} \n            width={cellSize} \n            height={cellSize} \n            stroke={\"black\"}\n            fill={isCenter ? \"red\" : isActive ? \"white\" : \"grey\"}\n          />\n        ))}\n      </svg>\n    );\n  }\n\n  maxRadiusSelector = createSelector(\n    ({neighbourhood}) => neighbourhood.rings,\n    rings => {\n      const radiuses = rings\n        .map(neighbourhood => neighbourhood.maxRadius);\n      return Math.max(...radiuses);\n    },\n  );\n\n  get maxRadius() {\n    return this.maxRadiusSelector(this.props);\n  }\n\n  gridSelector = createSelector(\n    ({neighbourhoodType}) => neighbourhoodType,\n    createSelector(\n      this.maxRadiusSelector,\n      ({neighbourhood}) => neighbourhood.rings,\n      (maxRadius, rings) => {\n        const radiuses = _.range(maxRadius + 1).map(() => false);\n        for (const ring of rings) {\n          for (const radius of _.range(ring.minRadius + 1, ring.maxRadius + 1)) {\n            radiuses[radius] = true;\n          }\n        }\n        return radiuses;\n      },\n    ),\n    this.maxRadiusSelector,\n    (neighbourhoodType, radiuses, maxRadius) => {\n      const grid = _.range(-maxRadius, maxRadius + 1).map(\n        x => _.range(-maxRadius, maxRadius + 1).map(\n          y => ({x, y}))).flat();\n      grid.forEach(cell => {\n        cell.isCenter = cell.x === 0 && cell.y === 0;\n        if (neighbourhoodType === \"round\") {\n          cell.distance = Math.floor(Math.sqrt(cell.x * cell.x + cell.y * cell.y) + 0.5);\n        } else if(neighbourhoodType === \"square\") {\n          cell.distance = Math.max(Math.abs(cell.x), Math.abs(cell.y));\n        } else {\n          cell.distance = null;\n        }\n        cell.isActive = !!radiuses[cell.distance];\n      });\n      return grid;\n    },\n  );\n\n  get grid() {\n    return this.gridSelector(this.props);\n  }\n}\n","import { Component, Fragment } from \"react\";\nimport { createSelector } from \"reselect\";\n\nimport { createLocalPresetCopy, addLocalPresetGetConfiguration } from \"../configuration\";\nimport { getPresetsByName, initialPresets } from \"../configuration/presets\";\n\nexport default class SettingsEditor extends Component {\n  static getDefaultSettings(defaultPreset = \"original\") {\n    const presetsByName = getPresetsByName(initialPresets);\n    const presetData = presetsByName[defaultPreset];\n\n    return {\n      keepReseeding: true,\n      preset: defaultPreset,\n      presetData,\n      monochrome: false,\n    };\n  }\n  \n  render() {\n    const {\n      presets, presetsByName,\n      settings: {keepReseeding, preset, monochrome},\n      initialConfiguration, configuration,\n    } = this.props;\n\n    return (\n      <Fragment>\n        <button onClick={this.props.onRestart}>Restart</button>\n        <button onClick={this.onReset}>Reset Configuration</button>\n        <a href={this.urlFragment}>Share configuration</a>\n        <br/><br/>\n        <label>\n          Keep reseeding \n          <input \n            type={\"checkbox\"} \n            checked={keepReseeding} \n            onChange={this.onKeepRessedingChange} \n          />\n        </label>\n        <label>\n          Preset: \n          <select \n            value={preset} \n            onChange={this.onPresetChange}\n          >\n            {presets.map(preset => (\n              <option \n                key={preset.name}\n                value={preset.name}\n              >\n                {preset.isEditable ? \"[Local]\" : \"\"} {preset.label}\n              </option>\n            ))}\n          </select>\n        </label>\n        <button\n          onClick={this.onSaveACopyClick}\n        >\n          Make a local copy\n        </button>\n        <button\n          disabled={!presetsByName[preset].isEditable || initialConfiguration === configuration}\n          title={\n            !presetsByName[preset].isEditable\n              ? \"This preset is not editable\" :\n              initialConfiguration === configuration \n              ? \"No changes to save\" : undefined\n          }\n          onClick={this.onUpdatePresetClick}\n        >\n          Update local preset\n        </button> \n        <button\n          disabled={!presetsByName[preset].isEditable}\n          title={\n            !presetsByName[preset].isEditable\n              ? \"This preset is not editable\" : undefined\n          }\n          onClick={this.onRenamePresetClick}\n        >\n          Rename local preset\n        </button> \n        <button\n          disabled={!presetsByName[preset].isEditable}\n          title={\n            !presetsByName[preset].isEditable\n              ? \"This preset is not editable \" : undefined\n          }\n          onClick={this.onDeletePresetClick}\n        >\n          Delete local preset\n        </button> \n        <label>\n          Monochrome \n          <input \n            type={\"checkbox\"} \n            checked={monochrome} \n            onChange={this.onMonochromeChange} \n          />\n        </label>\n      </Fragment>\n    );\n  }\n\n  urlFragmentSelector = createSelector(\n    createSelector(\n      ({configuration}) => configuration,\n      configuration => {\n        return btoa(JSON.stringify(configuration));\n      },\n    ),\n    hash => {\n      return `#${hash}`;\n    },\n  );\n  \n  get urlFragment() {\n    return this.urlFragmentSelector(this.props);\n  }\n\n  updateSettings(newPartialSettings) {\n    if (!this.props.onChange) {\n      return;\n    }\n    this.props.onChange({\n      ...this.props.settings,\n      ...newPartialSettings,\n    });\n  }\n\n  updateInitialConfiguration(newInitialConfiguration) {\n    if (!this.props.onInitialConfigurationChange) {\n      console.log(\"No onInitialConfigurationChange\")\n      return;\n    }\n    this.props.onInitialConfigurationChange(newInitialConfiguration);\n  }\n\n  updateConfiguration(newConfiguration) {\n    if (!this.props.onConfigurationChange) {\n      return;\n    }\n    this.props.onConfigurationChange(newConfiguration);\n  }\n\n  onReset = () => {\n    this.updateConfiguration(this.props.initialConfiguration);\n  };\n\n  onKeepRessedingChange = ({target: {checked}}) => {\n    this.updateSettings({keepReseeding: checked});\n  }\n\n  onPresetChange = ({target: {value}}) => {\n    this.setPreset(value);\n  };\n\n  setPreset(preset) {\n    const presetData = this.props.presetsByName[preset];\n    const initialConfiguration = presetData.getConfiguration();\n    this.updateSettings({\n      preset,\n      presetData,\n    });\n    this.updateInitialConfiguration(initialConfiguration);\n    this.updateConfiguration(initialConfiguration);\n  }\n\n  onSaveACopyClick = () => {\n    if (!this.props.onPresetsChange) {\n      return;\n    }\n    const newPreset = createLocalPresetCopy(\n      this.props.presetsByName, \n      this.props.presetsByName[this.props.settings.preset],\n    );\n    newPreset.label = prompt(\"Choose a name\", newPreset.label);\n    this.props.onPresetsChange([\n      ...this.props.presets,\n      newPreset,\n    ], () => {\n      this.setPreset(newPreset.name);\n    });\n  };\n\n  onUpdatePresetClick = () => {\n    const presets = this.props.presets;\n    const index = presets\n      .findIndex(preset => preset.name === this.props.settings.preset);\n    if (index < 0) {\n      console.error(`Could not find preset ${this.settings.preset}`);\n      return;\n    }\n    const preset = presets[index];\n    const configuration = this.props.configuration;\n    const newPreset = {...preset, configuration};\n    addLocalPresetGetConfiguration(newPreset);\n    this.props.onPresetsChange([\n      ...presets.slice(0, index),\n      newPreset,\n      ...presets.slice(index + 1),\n    ]);\n    this.updateInitialConfiguration(configuration);\n  };\n\n  onRenamePresetClick = () => {\n    const presets = this.props.presets;\n    const index = presets\n      .findIndex(preset => preset.name === this.props.settings.preset);\n    if (index < 0) {\n      console.error(`Could not find preset ${this.settings.preset}`);\n      return;\n    }\n    const preset = presets[index];\n    const newPreset = {...preset,};\n    newPreset.label = prompt(\"Choose a name\", newPreset.label);\n    this.props.onPresetsChange([\n      ...presets.slice(0, index),\n      newPreset,\n      ...presets.slice(index + 1),\n    ]);\n  }\n\n  onDeletePresetClick = () => {\n    const presets = this.props.presets;\n    const index = presets\n      .findIndex(preset => preset.name === this.props.settings.preset);\n    if (index < 0) {\n      console.error(`Could not find preset ${this.settings.preset}`);\n      return;\n    }\n    this.props.onPresetsChange([\n      ...presets.slice(0, index),\n      ...presets.slice(index + 1),\n    ]);\n    this.setPreset(presets[0].name);\n  };\n\n  onMonochromeChange = ({target: {checked}}) => {\n    this.updateSettings({monochrome: checked});\n  }\n}\n","import React, { Component } from \"react\";\nimport { ConfigurationEditor, saveLocalPresets } from \"./configuration\";\nimport { SettingsEditor } from \"./settings\";\nimport { initialPresets } from \"./configuration\";\nimport { createSelector } from \"reselect\";\n\nexport default class ControlPanel extends Component {\n  static getInitialSettingsAndConfiguration(defaultPreset = \"original\") {\n    const settings = SettingsEditor\n      .getDefaultSettings(defaultPreset);\n    const configuration = ConfigurationEditor\n      .getInitialConfiguration(settings.preset);\n    return {\n      settings,\n      initialConfiguration: configuration,\n      configuration,\n    };\n  }\n\n  state = {\n    presets: initialPresets, \n  };\n\n  presetsByNameSelector = createSelector(\n    ({presets}) => presets,\n    presets => {\n      return Object.fromEntries(presets.map(\n        preset => [preset.name, preset]));\n    },\n  )\n\n  get presetsByName() {\n    return this.presetsByNameSelector(this.state);\n  }\n\n  render() {\n    const {presetsByName} = this;\n    const {presets} = this.state;\n    const {\n      configuration,\n      initialConfiguration,\n      settings,\n    } = this.props;\n\n    return (\n      <div style={{ margin: \"10%\", height: 120, width: \"80%\" }} >\n        <h3>Settings</h3>\n        <SettingsEditor \n          presets={presets}\n          presetsByName={presetsByName}\n          onPresetsChange={this.onPresetsChange}\n          settings={settings}\n          initialConfiguration={initialConfiguration}\n          configuration={configuration}\n          onRestart={this.props.onRestart}\n          onChange={this.props.onSetingsChange}\n          onInitialConfigurationChange={this.props.onInitialConfigurationChange}\n          onConfigurationChange={this.props.onConfigurationChange}\n        />\n        <h3>Configuration</h3>\n        <ConfigurationEditor\n          neighbourhoodType={settings.presetData.neighbourhoodType}\n          type={settings.presetData.type}\n          configuration={configuration}\n          onChange={this.props.onConfigurationChange}\n        />\n      </div>\n    );\n  }\n\n  onPresetsChange = (presets, callback) => {\n    this.setState({presets}, callback);\n    saveLocalPresets(presets);\n  };\n}\n","import React, {Component} from \"react\";\n\nconst blogPostLink = \"https://slackermanz.com/understanding-multiple-neighborhood-cellular-automata/\"\nconst originalShaderToyLink = \"https://www.shadertoy.com/view/7ll3R7\";\nconst forkedShaderToyLink = \"https://www.shadertoy.com/view/ss3Xz8\";\nconst codeLink = \"https://codesandbox.io/s/keen-elion-2ghjn\";\n\nexport default class Editorial extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Editable Multiple Network Cellular Automata</h2>\n        <h3>Inspiration</h3>\n        <p>\n          Slackerman introduced MCNA in one of his <a href={blogPostLink}>Slackermanz' blog posts</a>, \n          which also included the shader code for some examples.\n        </p>\n\n        <p>\n          I was fascinated by <a href={originalShaderToyLink}>one in particular</a>, \n          I quickly <a href={forkedShaderToyLink}>edited it a bit</a>, and \n          I run three independent versions of the concept, one for each red, \n          green, blue channels.\n        </p>\n        <h3>Purpose</h3>\n        <p>\n          I really wanted to see how does the automaton behave with different rules, so I spent some\n          time to refactor the code a bit, and make it easy to pass the parameters.\n        </p>\n        <p>\n          Hopefully, this will lead to the discovery of more interesting rules, and an easier way to \n          research MCNA!\n        </p>\n        <h3>Features</h3>\n        <ul>\n          <li>3 independent channels or monochrome</li>\n          <li>Editable neighbourhoods and rules</li>\n          <li>Multiple rings per neighbourhood</li>\n          <li>Discrete or continuous calculations</li>\n          <li>Round or square neighbourhoods</li>\n          <li>Neighbourhood visualition</li>\n          <li>Sharable links</li>\n          <li>Local saving of custom presets</li>\n        </ul>\n        <h3>Roadmap</h3>\n        <p>\n          <a href={codeLink}>Check the code</a>\n        </p>\n        <ul>\n          <li>Arbirtrary definition of neighbourhoods</li>\n          <li>Nicer interface</li>\n        </ul>\n        <h3>Tips</h3>\n        <p>\n          Run in monochrome, click \"Restart\", after a while disable the \n          monchrome, and disable \"Keep reseeding\" after 1 flash - see\n          the divergence of each channel spread!\n        </p>\n      </div>\n    );\n  }\n}\n","import \"./styles.css\";\nimport React, { Component, Fragment } from \"react\";\nimport {createSelector} from \"reselect\";\n\nimport Renderer from \"./components/Renderer\";\nimport {getVertexShaderCode, getCopyTextureCode, getGetMncaCode} from \"./shaders\";\nimport ControlPanel from \"./components/ControlPanel\";\nimport Editorial from \"./components/Editorial\";\nimport createFunctionRef from \"./components/createFunctionRef\";\n\nconst getMainSources = async () => {\n  const vertexShaderCode = await getVertexShaderCode()\n  const copyTextureCode = await getCopyTextureCode();\n  return [vertexShaderCode, copyTextureCode];\n}\n\nclass App extends Component {\n  vertexShaderCode = null;\n  state = {\n    ...ControlPanel.getInitialSettingsAndConfiguration(),\n    mainSources: null,\n    texturesSources: null,\n    percentagesActive: {\n      monochrome: null,\n      red: null, green: null, blue: null,\n    },\n  };\n\n  componentDidMount() {\n    this.updateMainSources();\n    this.updateTextureSources();\n  }\n\n  updateMainSources = async () => {\n    if (this.state.mainSources !== null) {\n      return;\n    }\n    const mainSources = await getMainSources();\n    this.vertexShaderCode = mainSources[0];\n    this.setState({mainSources});\n  }\n\n  restartRef = createFunctionRef();\n\n  render() {\n    const {\n      settings, \n      initialConfiguration, configuration, \n      mainSources, texturesSources,\n      percentagesActive,\n    } = this.state;\n\n    return (\n      <div>\n        <Editorial />\n        {mainSources !== null && texturesSources !== null ? (\n          <Renderer \n            mainSources={mainSources}\n            texturesSources={texturesSources}\n            getFrameUniforms={this.getFrameUniforms} \n            restartRef={this.restartRef}\n            onRender={this.onRender}\n          />\n        ) : null}\n        <div>\n          Percentage active{\" \"}\n          {settings.monochrome ? (\n            `${percentagesActive.monochrome || \"?\"}%`\n          ) : (\n            <Fragment>\n              <span style={{color: \"red\"}}>{percentagesActive.red || \"?\"}% R</span>,{\" \"}\n              <span style={{color: \"green\"}}>{percentagesActive.green || \"?\"}% G</span>,{\" \"}\n              <span style={{color: \"blue\"}}>{percentagesActive.blue || \"?\"}% B</span>\n            </Fragment>\n          )}\n        </div>\n        <ControlPanel \n          settings={settings}\n          initialConfiguration={initialConfiguration}\n          configuration={configuration}\n          onRestart={this.restartRef.callIfSet}\n          onSetingsChange={this.onSettingsChange} \n          onInitialConfigurationChange={this.onInitialConfigurationChange}\n          onConfigurationChange={this.onConfigurationChange} \n        />\n      </div>\n    );\n  }\n\n  onSettingsChange = settings => {\n    this.setState({settings});\n  }\n\n  onInitialConfigurationChange = initialConfiguration => {\n    this.setState({initialConfiguration});\n  }\n\n  onConfigurationChange = configuration => {\n    this.setState({configuration}, this.updateTextureSources());\n  }\n\n  neighbourhoodsSelector = ({configuration: {neighbourhoods}}) => neighbourhoods;\n  neibhourhoodRingsUniformSelector = createSelector(\n    this.neighbourhoodsSelector, \n    neighbourhoods => {\n      return neighbourhoods\n        .map((neighbourhood, neighbourhoodIndex) => \n          neighbourhood.rings.map(ring => \n            [ring.minRadius, ring.maxRadius, neighbourhoodIndex]).flat())\n        .flat();\n    },\n  );\n  get neibhourhoodRingssUniform() {\n    return this.neibhourhoodRingsUniformSelector(this.state);\n  }\n\n  maxRingRadiusSelector = createSelector(\n    this.neighbourhoodsSelector,\n    neighbourhoods => {\n      return Math.max(...neighbourhoods.map(\n        neighbourhood => Math.max(...neighbourhood.rings.map(\n          ring => ring.maxRadius))));\n    },\n  );\n  get maxRingRadius() {\n    return this.maxRingRadiusSelector(this.state);\n  }\n\n  typeSelector = ({settings: {presetData: {type}}}) => type;\n  rulesSelector = ({configuration: {rules}}) => rules;\n  rulesUniformSelector = createSelector(\n    this.typeSelector,\n    this.rulesSelector,\n    (type, rules) => {\n      return rules\n        .map(rule => [\n          rule.min / 100, \n          rule.max / 100, \n          type === \"discrete\" ? (\n            rule.result ? 1 : 0\n          ) : (\n            rule.result\n          ), \n          rule.neighbourhoodIndex,\n        ])\n        .flat();\n    },\n  );\n\n  get rulesUniform() {\n    return this.rulesUniformSelector(this.state);\n  }\n\n  keepReseedingSelector = \n    ({settings: {keepReseeding}}) => keepReseeding;\n\n  monochromeSelector = \n    ({settings: {monochrome}}) => monochrome;\n\n  frameUniformsSelector = createSelector(\n    this.neibhourhoodRingsUniformSelector,\n    this.rulesUniformSelector,\n    this.keepReseedingSelector,\n    this.monochromeSelector,\n    this.maxRingRadiusSelector,\n    (neibhourhoodRingssUniform, rulesUniform, keepReseeding, monochrome, maxRingRadius) => {\n      return {\n        u_neighbourhoodRings: neibhourhoodRingssUniform,\n        u_rules: rulesUniform,\n        u_keepReseeding: keepReseeding,\n        u_monochrome: monochrome,\n        u_maxRingRadius: maxRingRadius,\n      };      \n    }\n  );\n\n  get frameUniforms() {\n    return this.frameUniformsSelector(this.state);\n  }\n\n  getFrameUniforms = () => {\n    return this.frameUniforms;\n  };\n\n  onRender = (_1, _2, uniforms, getPixelsBuffer) => {\n    if (uniforms.iFrame % 30 !== 0) {\n      return;\n    }\n    const pixelsBuffer = getPixelsBuffer();\n    const length = pixelsBuffer.length / 4;\n    if (this.state.settings.monochrome) {\n      let red = 0;\n      for (let i = 0 ; i < length * 4 ; i += 4) {\n        red += pixelsBuffer[i + 0] > 0;\n      }\n      this.setState(({percentagesActive}) => ({\n        percentagesActive: {\n          ...percentagesActive,\n          monochrome: ~~(red / length * 100), \n        },\n      }));\n    } else {\n      let red = 0, green = 0, blue = 0;\n      for (let i = 0 ; i < length * 4 ; i += 4) {\n        red += pixelsBuffer[i + 0] > 0;\n        green += pixelsBuffer[i + 1] > 0;\n        blue += pixelsBuffer[i + 2] > 0;\n      }\n      this.setState(({percentagesActive}) => ({\n        percentagesActive: {\n          ...percentagesActive,\n          red: ~~(red / length * 100), \n          green: ~~(green / length * 100), \n          blue: ~~(blue / length * 100),\n        },\n      }));\n    }\n  };\n\n  getMncaCode = null;\n\n  texturesSourcesSelector = createSelector(\n    this.frameUniformsSelector,\n    frameUniforms => {\n      return [\n        [\n          this.vertexShaderCode, \n          this.getMncaCode(frameUniforms, this.state.configuration, this.state.settings),\n        ],\n      ];\n    },\n  );\n\n  get texturesSources() {\n    return this.texturesSourcesSelector(this.state);\n  }\n\n  updateTextureSources = async () => {\n    await this.updateMainSources();\n    if (this.getMncaCode === null) {\n      this.getMncaCode = await getGetMncaCode();\n    }\n    this.setState({texturesSources: this.texturesSources});\n  };\n}\n\nexport default App;\n\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}